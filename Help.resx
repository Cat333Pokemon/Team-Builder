<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TextBox1.Text" xml:space="preserve">
    <value>Welcome to the Team Builder by Cat.

I've built this program to make it simple to design a team around your needs. However, even the best of us get stuck now and then, so I've created this help text to answer any questions you may have. Now, time for the FAQ!

Q. What do the borders around the type icons on the weaknesses and resistances mean?
A. Point at them to find their multipliers. This represents how much extra or less damage moves of these types will do against the specified Pokémon.

Q. How do I save/load only a single Pokémon?
A. Use the Export/Import options in the Pokémon menu.

Q. My teams and Pokémon are always corrupt when opening. Why is this?
A. Did you tamper with the files in another program? To make sure files don't get corrupted, the last value in the file is a checksum of the rest of the data in it. It doesn't get updated when you edit teams with other programs. If you want to manipulate your team with another program, use the Export CSV option in the File menu.

Q. Why doesn't the Shiny checkbox do anything?
A. Adding shiny images would nearly double the size of the program. If this is a much-wanted feature, drop a message on the forum (see below).

Q. The data are incorrect. How can I get correct data?
A. Download a new copy of the database. If one is not available, ask for an update (see below).

If you need help with anything else, click the link to Victory Road below and drop a post on the forum. Cat or another helpful user will try to help you with your problem.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAEBAQAAAABAAoAQAANgAAACAgEAAAAAQA6AIAAF4BAAAwMBAAAAAEAGgGAABGBAAAKAAAABAA
        AAAgAAAAAQAEAAAAAACAAAAAAAAAAAAAAAAQAAAAEAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICA
        AACAgIAAwMDAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP///wAAAAAAAAAAAAAAAAAAAAAAAA//////
        8AAA/wAAAAD/AADwAAAAAA8AAPAP///wDwAA8A8AAP//AADwDw/w//8AAJAJD/CZmQAAkAkAAJmZAACQ
        CZmZkAkAAJAAAAAACQAAmQAAAACZAAAJmZmZmZAAAAAAAAAAAAAAAAAAAAAAAIABAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIABAAAoAAAAIAAAAEAA
        AAABAAQAAAAAAAACAAAAAAAAAAAAABAAAAAQAAAAAAAAAAAAgAAAgAAAAICAAIAAAACAAIAAgIAAAICA
        gADAwMAAAAD/AAD/AAAA//8A/wAAAP8A/wD//wAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAACqAAAAAAD//////////wAAqgAAAA//////////////8AAAAAD/////
        //////////8AAAAA////AAAAAAAA////AAAAAP//8AAAAAAAAA///wAAAA///wAAAAAAAAAA///wAAAP
        //8AAP////8AAP//8AAAD///AA//////8AD///AAAA///wAP//////AA///wAAAP//8AD//////wAP//
        8AAAD///AA//AAD///////AAAA///wAP8P//D//////wAAAP//8AD/D//w//////8AAACZmZAAmQ//8J
        mZmZmZAAAAmZmQAJkP//CZmZmZmQAAAJmZkACZkAAJmZmZmZkAAACZmZAAmZmZmZkACZmZAAAAmZmQAJ
        mZmZmZAAmZmQAAAJmZkACZmZmZmQAJmZkAAACZmZAACZmZmZAACZmZAAAAmZmQAAAAAAAAAAmZmQAAAA
        mZmQAAAAAAAACZmZAAAAAJmZmQAAAAAAAJmZmQAAAACZmZmZmZmZmZmZmZkAAAAACZmZmZmZmZmZmZmQ
        AAAAAAAAmZmZmZmZmZkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA4AAAB4AAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAgAAAAeAAAAcoAAAAMAAAAGAAAAABAAQAAAAAAIAEAAAAAAAAAAAAABAAAAAQAAAAAAAAAAAA
        gAAAgAAAAICAAIAAAACAAIAAgIAAAMDAwACAgIAAAAD/AAD/AAAA//8A/wAAAP8A/wD//wAA////AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACqoAAAAAAAAAAAAAAAAAAAAAAAAAAAAACqoAAAAA
        AAAAAA//////////////AAAACqoAAAAAAAAA//////////////////AAAAAAAAAAAAD/////////////
        ///////wAAAAAAAAAA//////////////////////AAAAAAAAAA//////////////////////AAAAAAAA
        AP/////wAAAAAAAAAAD/////8AAAAAAAAP////8AAAAAAAAAAAAP////8AAAAAAAAP////AAAAAAAAAA
        AAAA////8AAAAAAAD////wAAAAAAAAAAAAAAD////wAAAAAAD////wAAD////////wAAD////wAAAAAA
        D////wAA//////////AAD////wAAAAAAD////wAA//////////AAD////wAAAAAAD////wAA////////
        //AAD////wAAAAAAD////wAA//////////AAD////wAAAAAAD////wAA/////////////////wAAAAAA
        D////wAA////AAD//////////wAAAAAAD////wAA///w//8P/////////wAAAAAAD////wAA//8P///w
        /////////wAAAAAAD////wAA//8P///w/////////wAAAAAACZmZmQAAmZkP///wmZmZmZmZmQAAAAAA
        CZmZmQAAmZkP///wmZmZmZmZmQAAAAAACZmZmQAAmZmQ//8JmZmZmZmZmQAAAAAACZmZmQAAmZmZAACZ
        mZmZmZmZmQAAAAAACZmZmQAAmZmZmZmZmZmZmZmZmQAAAAAACZmZmQAAmZmZmZmZmZAACZmZmQAAAAAA
        CZmZmQAAmZmZmZmZmZAACZmZmQAAAAAACZmZmQAAmZmZmZmZmZAACZmZmQAAAAAACZmZmQAAmZmZmZmZ
        mZAACZmZmQAAAAAACZmZmQAACZmZmZmZmQAACZmZmQAAAAAACZmZmQAAAAAAAAAAAAAACZmZmQAAAAAA
        AJmZmZAAAAAAAAAAAAAAmZmZkAAAAAAAAJmZmZkAAAAAAAAAAAAJmZmZkAAAAAAAAJmZmZmQAAAAAAAA
        AACZmZmZkAAAAAAAAAmZmZmZmZmZmZmZmZmZmZmZAAAAAAAAAAmZmZmZmZmZmZmZmZmZmZmZAAAAAAAA
        AACZmZmZmZmZmZmZmZmZmZmQAAAAAAAAAAAAmZmZmZmZmZmZmZmZmZAAAAAAAAAAAAAAAAmZmZmZmZmZ
        mZmZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAPAAAAAAPwAAwAAAAAAHAACAAAAAAAMAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAA
        AAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAAB
        AAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAA
        AAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAAB
        AAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAA
        AAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAAB
        AAAAAAAAAAEAAIAAAAAAAwAAwAAAAAAHAAD4AAAAAD8AAA==
</value>
  </data>
</root>